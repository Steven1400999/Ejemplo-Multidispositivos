{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport AnimatedNode, { getCallID, setCallID } from \"./AnimatedNode\";\nimport { adapt } from \"./AnimatedBlock\";\nimport { val } from \"../val\";\nimport invariant from 'invariant';\nvar AnimatedCallFunc = function (_AnimatedNode) {\n  _inherits(AnimatedCallFunc, _AnimatedNode);\n  function AnimatedCallFunc(what, args, params) {\n    var _this;\n    _classCallCheck(this, AnimatedCallFunc);\n    invariant(what instanceof AnimatedNode, \"Reanimated: AnimatedCallFunc 'what' argument should be of type AnimatedNode but got \" + what);\n    invariant(args.every(function (el) {\n      return el instanceof AnimatedNode;\n    }), \"Reanimated: every AnimatedCallFunc 'args' argument should be of type AnimatedNode but got \" + args);\n    invariant(params.every(function (el) {\n      return el instanceof AnimatedNode;\n    }), \"Reanimated: every AnimatedCallFunc 'params' argument should be of type AnimatedNode but got \" + params);\n    _this = _callSuper(this, AnimatedCallFunc, [{\n      type: 'callfunc',\n      what: what,\n      args: args,\n      params: params\n    }, _toConsumableArray(args)]);\n    _this._what = what;\n    _this._args = args;\n    _this._params = params;\n    return _this;\n  }\n  _createClass(AnimatedCallFunc, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"AnimatedCallFunc, id: \" + this.__nodeID;\n    }\n  }, {\n    key: \"beginContext\",\n    value: function beginContext() {\n      var _this2 = this;\n      this._previousCallID = getCallID();\n      setCallID(getCallID() + '/' + this.__nodeID);\n      this._params.forEach(function (param, index) {\n        param.beginContext(_this2._args[index], _this2._previousCallID);\n      });\n    }\n  }, {\n    key: \"endContext\",\n    value: function endContext() {\n      this._params.forEach(function (param) {\n        param.endContext();\n      });\n      setCallID(this._previousCallID);\n    }\n  }, {\n    key: \"__onEvaluate\",\n    value: function __onEvaluate() {\n      this.beginContext();\n      var value = val(this._what);\n      this.endContext();\n      return value;\n    }\n  }]);\n  return AnimatedCallFunc;\n}(AnimatedNode);\nexport function createAnimatedCallFunc(proc, args, params) {\n  return new AnimatedCallFunc(proc, args.map(function (p) {\n    return adapt(p);\n  }), params);\n}","map":{"version":3,"names":["AnimatedNode","getCallID","setCallID","adapt","val","invariant","AnimatedCallFunc","_AnimatedNode","_inherits","what","args","params","_this","_classCallCheck","every","el","_callSuper","type","_toConsumableArray","_what","_args","_params","_createClass","key","value","toString","__nodeID","beginContext","_this2","_previousCallID","forEach","param","index","endContext","__onEvaluate","createAnimatedCallFunc","proc","map","p"],"sources":["C:/Users/Stefano/Ejemplo-Multidispositivos/node_modules/react-native-reanimated/lib/reanimated1/core/AnimatedCallFunc.js"],"sourcesContent":["import AnimatedNode, { getCallID, setCallID } from './AnimatedNode';\nimport { adapt } from './AnimatedBlock';\nimport { val } from '../val';\nimport invariant from 'invariant';\n\nclass AnimatedCallFunc extends AnimatedNode {\n  _previousCallID;\n  _what;\n  _args;\n  _params;\n  constructor(what, args, params) {\n    invariant(\n      what instanceof AnimatedNode,\n      `Reanimated: AnimatedCallFunc 'what' argument should be of type AnimatedNode but got ${what}`\n    );\n    invariant(\n      args.every((el) => el instanceof AnimatedNode),\n      `Reanimated: every AnimatedCallFunc 'args' argument should be of type AnimatedNode but got ${args}`\n    );\n    invariant(\n      params.every((el) => el instanceof AnimatedNode),\n      `Reanimated: every AnimatedCallFunc 'params' argument should be of type AnimatedNode but got ${params}`\n    );\n    super(\n      {\n        type: 'callfunc',\n        what,\n        args,\n        params,\n      },\n      [...args]\n    );\n    this._what = what;\n    this._args = args;\n    this._params = params;\n  }\n\n  toString() {\n    return `AnimatedCallFunc, id: ${this.__nodeID}`;\n  }\n\n  beginContext() {\n    this._previousCallID = getCallID();\n    setCallID(getCallID() + '/' + this.__nodeID);\n\n    this._params.forEach((param, index) => {\n      param.beginContext(this._args[index], this._previousCallID);\n    });\n  }\n\n  endContext() {\n    this._params.forEach((param) => {\n      param.endContext();\n    });\n    setCallID(this._previousCallID);\n  }\n\n  __onEvaluate() {\n    this.beginContext();\n    const value = val(this._what);\n    this.endContext();\n    return value;\n  }\n}\n\nexport function createAnimatedCallFunc(proc, args, params) {\n  return new AnimatedCallFunc(\n    proc,\n    args.map((p) => adapt(p)),\n    params\n  );\n}\n"],"mappings":";;;;;;;;AAAA,OAAOA,YAAY,IAAIC,SAAS,EAAEC,SAAS;AAC3C,SAASC,KAAK;AACd,SAASC,GAAG;AACZ,OAAOC,SAAS,MAAM,WAAW;AAAC,IAE5BC,gBAAgB,aAAAC,aAAA;EAAAC,SAAA,CAAAF,gBAAA,EAAAC,aAAA;EAKpB,SAAAD,iBAAYG,IAAI,EAAEC,IAAI,EAAEC,MAAM,EAAE;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAP,gBAAA;IAC9BD,SAAS,CACPI,IAAI,YAAYT,YAAY,2FAC2DS,IACzF,CAAC;IACDJ,SAAS,CACPK,IAAI,CAACI,KAAK,CAAC,UAACC,EAAE;MAAA,OAAKA,EAAE,YAAYf,YAAY;IAAA,EAAC,iGAC+CU,IAC/F,CAAC;IACDL,SAAS,CACPM,MAAM,CAACG,KAAK,CAAC,UAACC,EAAE;MAAA,OAAKA,EAAE,YAAYf,YAAY;IAAA,EAAC,mGAC+CW,MACjG,CAAC;IACDC,KAAA,GAAAI,UAAA,OAAAV,gBAAA,GACE;MACEW,IAAI,EAAE,UAAU;MAChBR,IAAI,EAAJA,IAAI;MACJC,IAAI,EAAJA,IAAI;MACJC,MAAM,EAANA;IACF,CAAC,EAAAO,kBAAA,CACGR,IAAI;IAEVE,KAAA,CAAKO,KAAK,GAAGV,IAAI;IACjBG,KAAA,CAAKQ,KAAK,GAAGV,IAAI;IACjBE,KAAA,CAAKS,OAAO,GAAGV,MAAM;IAAC,OAAAC,KAAA;EACxB;EAACU,YAAA,CAAAhB,gBAAA;IAAAiB,GAAA;IAAAC,KAAA,EAED,SAAAC,SAAA,EAAW;MACT,kCAAgC,IAAI,CAACC,QAAQ;IAC/C;EAAC;IAAAH,GAAA;IAAAC,KAAA,EAED,SAAAG,aAAA,EAAe;MAAA,IAAAC,MAAA;MACb,IAAI,CAACC,eAAe,GAAG5B,SAAS,CAAC,CAAC;MAClCC,SAAS,CAACD,SAAS,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAACyB,QAAQ,CAAC;MAE5C,IAAI,CAACL,OAAO,CAACS,OAAO,CAAC,UAACC,KAAK,EAAEC,KAAK,EAAK;QACrCD,KAAK,CAACJ,YAAY,CAACC,MAAI,CAACR,KAAK,CAACY,KAAK,CAAC,EAAEJ,MAAI,CAACC,eAAe,CAAC;MAC7D,CAAC,CAAC;IACJ;EAAC;IAAAN,GAAA;IAAAC,KAAA,EAED,SAAAS,WAAA,EAAa;MACX,IAAI,CAACZ,OAAO,CAACS,OAAO,CAAC,UAACC,KAAK,EAAK;QAC9BA,KAAK,CAACE,UAAU,CAAC,CAAC;MACpB,CAAC,CAAC;MACF/B,SAAS,CAAC,IAAI,CAAC2B,eAAe,CAAC;IACjC;EAAC;IAAAN,GAAA;IAAAC,KAAA,EAED,SAAAU,aAAA,EAAe;MACb,IAAI,CAACP,YAAY,CAAC,CAAC;MACnB,IAAMH,KAAK,GAAGpB,GAAG,CAAC,IAAI,CAACe,KAAK,CAAC;MAC7B,IAAI,CAACc,UAAU,CAAC,CAAC;MACjB,OAAOT,KAAK;IACd;EAAC;EAAA,OAAAlB,gBAAA;AAAA,EAzD4BN,YAAY;AA4D3C,OAAO,SAASmC,sBAAsBA,CAACC,IAAI,EAAE1B,IAAI,EAAEC,MAAM,EAAE;EACzD,OAAO,IAAIL,gBAAgB,CACzB8B,IAAI,EACJ1B,IAAI,CAAC2B,GAAG,CAAC,UAACC,CAAC;IAAA,OAAKnC,KAAK,CAACmC,CAAC,CAAC;EAAA,EAAC,EACzB3B,MACF,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}