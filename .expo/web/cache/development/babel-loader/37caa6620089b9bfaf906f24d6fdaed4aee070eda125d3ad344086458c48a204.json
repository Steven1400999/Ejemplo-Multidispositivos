{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport AnimatedNode from \"./AnimatedNode\";\nimport invariant from 'invariant';\nimport { val } from \"../val\";\nvar AnimatedAlways = function (_AnimatedNode) {\n  _inherits(AnimatedAlways, _AnimatedNode);\n  function AnimatedAlways(what) {\n    var _this;\n    _classCallCheck(this, AnimatedAlways);\n    invariant(what instanceof AnimatedNode, \"Reanimated: Animated.always node argument should be of type AnimatedNode but got \" + what);\n    _this = _callSuper(this, AnimatedAlways, [{\n      type: 'always',\n      what: what\n    }, [what]]);\n    _this._what = what;\n    return _this;\n  }\n  _createClass(AnimatedAlways, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"AnimatedAlways, id: \" + this.__nodeID;\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      this.__getValue();\n    }\n  }, {\n    key: \"__onEvaluate\",\n    value: function __onEvaluate() {\n      val(this._what);\n      return 0;\n    }\n  }]);\n  return AnimatedAlways;\n}(AnimatedNode);\nexport function createAnimatedAlways(item) {\n  return new AnimatedAlways(item);\n}","map":{"version":3,"names":["AnimatedNode","invariant","val","AnimatedAlways","_AnimatedNode","_inherits","what","_this","_classCallCheck","_callSuper","type","_what","_createClass","key","value","toString","__nodeID","update","__getValue","__onEvaluate","createAnimatedAlways","item"],"sources":["C:/Users/Stefano/Ejemplo-Multidispositivos/node_modules/react-native-reanimated/lib/reanimated1/core/AnimatedAlways.js"],"sourcesContent":["import AnimatedNode from './AnimatedNode';\nimport invariant from 'invariant';\nimport { val } from '../val';\n\nclass AnimatedAlways extends AnimatedNode {\n  _what;\n\n  constructor(what) {\n    invariant(\n      what instanceof AnimatedNode,\n      `Reanimated: Animated.always node argument should be of type AnimatedNode but got ${what}`\n    );\n    super({ type: 'always', what }, [what]);\n    this._what = what;\n  }\n\n  toString() {\n    return `AnimatedAlways, id: ${this.__nodeID}`;\n  }\n\n  update() {\n    this.__getValue();\n  }\n\n  __onEvaluate() {\n    val(this._what);\n    return 0;\n  }\n}\n\nexport function createAnimatedAlways(item) {\n  return new AnimatedAlways(item);\n}\n"],"mappings":";;;;;;;AAAA,OAAOA,YAAY;AACnB,OAAOC,SAAS,MAAM,WAAW;AACjC,SAASC,GAAG;AAAiB,IAEvBC,cAAc,aAAAC,aAAA;EAAAC,SAAA,CAAAF,cAAA,EAAAC,aAAA;EAGlB,SAAAD,eAAYG,IAAI,EAAE;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAL,cAAA;IAChBF,SAAS,CACPK,IAAI,YAAYN,YAAY,wFACwDM,IACtF,CAAC;IACDC,KAAA,GAAAE,UAAA,OAAAN,cAAA,GAAM;MAAEO,IAAI,EAAE,QAAQ;MAAEJ,IAAI,EAAJA;IAAK,CAAC,EAAE,CAACA,IAAI,CAAC;IACtCC,KAAA,CAAKI,KAAK,GAAGL,IAAI;IAAC,OAAAC,KAAA;EACpB;EAACK,YAAA,CAAAT,cAAA;IAAAU,GAAA;IAAAC,KAAA,EAED,SAAAC,SAAA,EAAW;MACT,gCAA8B,IAAI,CAACC,QAAQ;IAC7C;EAAC;IAAAH,GAAA;IAAAC,KAAA,EAED,SAAAG,OAAA,EAAS;MACP,IAAI,CAACC,UAAU,CAAC,CAAC;IACnB;EAAC;IAAAL,GAAA;IAAAC,KAAA,EAED,SAAAK,aAAA,EAAe;MACbjB,GAAG,CAAC,IAAI,CAACS,KAAK,CAAC;MACf,OAAO,CAAC;IACV;EAAC;EAAA,OAAAR,cAAA;AAAA,EAvB0BH,YAAY;AA0BzC,OAAO,SAASoB,oBAAoBA,CAACC,IAAI,EAAE;EACzC,OAAO,IAAIlB,cAAc,CAACkB,IAAI,CAAC;AACjC"},"metadata":{},"sourceType":"module","externalDependencies":[]}